{{>header}}

import type { ApiRequestOptions } from './ApiRequestOptions';
import type { ApiResult } from './ApiResult';

export type Resolver<T> = (options: ApiRequestOptions) => T | Promise<T>;
type Headers = Record<string, string>;

export type RequestMethod = (
  options: ApiRequestOptions,
  localConfig?: Config,
) => Promise<ApiResult>;

export type Config = {
    BASE: URL;
    VERSION: string;
    WITH_CREDENTIALS?: boolean;
    REQUEST: RequestMethod;
    TOKEN?: string | Resolver<string>;
    USERNAME?: string | Resolver<string>;
    PASSWORD?: string | Resolver<string>;
    HEADERS?: Headers | Resolver<Headers>;
}

export const OpenAPI: Config = {
    BASE: new URL('{{{server}}}'),
    VERSION: '{{{version}}}',
    REQUEST: () => {
        throw new Error('Implement me')
    }
};
